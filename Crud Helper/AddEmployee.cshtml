@model ProjectWithHelper.Models.Employee

@{
    ViewBag.Title = "AddEmployee";
}

<div>
    @Html.ActionLink("Back to Employee List", "GetAllEmpDetails")
</div>
@using (Html.BeginForm("AddEmployee", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div>
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="container-fluid">
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_Name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emp_Name, new { htmlAttributes = new { placeholder = "Enter Your Name", @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Emp_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_DOB, "D.O.B.", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emp_DOB, "{0:dd/MM/yyyy}", new { htmlAttributes = new { @type = "date", placeholder = "Date of Birth", @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Emp_DOB, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_Salary, "Salary", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emp_Salary, new { htmlAttributes = new { placeholder = "Salary", @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Emp_Salary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_Address, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emp_Address, new { htmlAttributes = new { placeholder = "Address", @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Emp_Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_Email, "E-Mail", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emp_Email, new { htmlAttributes = new { placeholder = "Email", @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Emp_Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_MobNo, "Phone Number", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Emp_MobNo, new { htmlAttributes = new { placeholder = "Phone Number", @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Emp_MobNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_Country, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Emp_Country, new SelectList(ViewBag.CountryList, "value", "text"), "Select Country", new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.Emp_Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_State, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Emp_State, new List<SelectListItem>(), "Select State", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Emp_State, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_City, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Emp_City, new List<SelectListItem>(), "Select City", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Emp_City, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-4">
                        <div class="col-md-10">
                            <img id="user_img" height="150" width="130" style="border:solid" />
                            @Html.TextBoxFor(m => m.ImageUpload, new { type = "file", accept = "image/jpeg,  image/jpg", onchange = "show(this)" })
                        </div>
                    </div>

                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_Sex, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            Male
                            @Html.RadioButtonFor(model => model.Emp_Sex, 1)
                            Female
                            @Html.RadioButtonFor(model => model.Emp_Sex, 2)
                            Other
                            @Html.RadioButtonFor(model => model.Emp_Sex, 3)
                        </div>
                    </div>
                    <div class="col-sm-4">
                        @Html.LabelFor(model => model.Emp_DevLang, "Languages", htmlAttributes: new { @class = "control-label col-md-2" }) <br />
                        <div class="col-md-10">
                            @foreach (var item in ViewBag.LanguageList)
                            {
                                <input id="chk@(item.Value)" type="checkbox" name="Emp_DevLang" value="@item.Value" /> @item.Text

                            }

                        </div>
                      
                    </div>
                </div>
            </div>
        </div>

        <input type="submit" value="Create" class="btn btn-success" />
        @*Container End*@
    </div>

}


<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script>
    $(document).ready(function () {
        $('#Emp_Country').change(function () {
            $.ajax({
                type: "post",
                url: "/Employee/GetState",
                data: { CountryId: $('#Emp_Country').val() },
                dataType: "json",
                //traditional: true,
                success: function (Data) {
                    Data = JSON.parse(Data);
                    var State = "<select id='Emp_State'>";
                    State = State + '<option value="">Select State</option>';
                    for (var i = 0; i < Data.length; i++) {
                        State = State + '<option value=' + Data[i].State_ID + '>' + Data[i].State_Name + '</option>';
                    }
                    State = State + '</select>';
                    $('#Emp_State').html(State);
                },
                error: function () {
                    var State = "<select id='Emp_State'>";
                    State = State + '<option value="">Select State</option>';
                    State = State + '</select>';
                    $('#Emp_State').html(State);
                }
            });
        });



        $('#Emp_State').change(function () {
            $.ajax({
                type: "post",
                url: "/Employee/GetCity",
                data: { StateId: $('#Emp_State').val() },
                dataType: "json",
                //traditional: true,
                success: function (Data) {

                    Data = JSON.parse(Data);
                    var State = "<select id='Emp_City'>";
                    State = State + '<option value="">Select City</option>';
                    for (var i = 0; i < Data.length; i++) {
                        State = State + '<option value=' + Data[i].City_ID + '>' + Data[i].City_Name + '</option>';
                    }
                    State = State + '</select>';
                    $('#Emp_City').html(State);
                },
                error: function () {
                    var State = "<select id='Emp_City'>";
                    State = State + '<option value="">Select City</option>';
                    State = State + '</select>';
                    $('#Emp_City').html(State);
                }
            });
        });
    });
    function show(input) {
        if (input.files && input.files[0]) {
            var filerdr = new FileReader();
            filerdr.onload = function (e) {
                $('#user_img').attr('src', e.target.result);
            }
            filerdr.readAsDataURL(input.files[0]);
        }
    }
</script>





@*Male
    @Html.RadioButtonFor(model => model.Emp_Sex, 1, model.Emp_Sex == 1 ? true : false)
            Female
    @Html.RadioButtonFor(model => model.Emp_Sex, 2, model.Emp_Sex == 1 ? true : false)
            Other
    @Html.RadioButtonFor(model => model.Emp_Sex, 3, model.Emp_Sex == 1 ? true : false)

    <fieldset>
        <legend>RadioButtonModel</legend>*@

@*@using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <table>
            @for (int i = 0; i < Model.Count(); i++)
            {
                <tr>
                    <td>
                        @Html.CheckBoxFor(m => m[i].Selected)
                    </td>
                    <td>
                        @Html.DisplayFor(m => m[i].Text)
                        @Html.HiddenFor(m => m[i].Value)
                        @Html.HiddenFor(m => m[i].Text)
                    </td>
                </tr>
            }
        </table>
        <br />
        <input type="submit" value="Submit" />
    }
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
                window.onload = function () {
                    alert("@ViewBag.Message");
                };
        </script>
    }
    </body>
    </html>*@


@*@foreach (var item in Model.CheckBoxItems)
{
    <input id="chk@(item.Value)"
           type="checkbox"
           value="@item.Value"
           checked="@item.IsChecked" />
    @item.Text
    <br />
}*@